@model IEnumerable<Request>
@using WebApplication.Models

@{
    ViewBag.Title = "Список моих задач-заявок";
}
<div class="modal fade" id="modDialog" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div id="dialogContent" class="modal-dialog"></div>
</div>

<h2>Список заявок</h2>
<p>Всего заявок: @(Model.Count<Request>())</p>
<div>
    <form method="post" action="/Request/MyIndex">
        <label>Предмет</label>
        @Html.DropDownList("category", ViewBag.Categories as SelectList)
        <input type="submit" value="Фильтр" class="buttonb" />
    </form>
</div>
<br />

<div id="toolbar">

    <button id="remove" class="btn btn-warning" disabled>
        <i class="glyphicon glyphicon-remove"></i> Скрыть выбранное
    </button>
</div>

<div class="table-responsive">
    <table class="table table-bordered table-hover table-condensed"
           id="table"
           data-click-to-select="true"
           data-show-columns="true"
           data-search="true"
           data-show-refresh="true"
           data-show-export="true"
           data-pagination="true"
           data-toolbar="#toolbar"
           data-minimum-count-columns="2"
           data-show-pagination-switch="true"
           data-id-field="id"
           data-page-size="6"
           data-page-list="[6,10, 25, 50, 100, ALL]"
           data-response-handler="responseHandler"
           data-flat="true"
           data-sort-order="desk"
           data-page-number="1"
           data-show-multi-sort="true">
        <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Priority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Document)
            </th>
            <th>
                Дата создания
            </th>
            <th>
                Детали
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Executor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Lifecycle)
            </th>
            <th>
                Назначить самому
            </th>
            <th>Функционал</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            <tr align="center">
                <td><b>@item.Id</b></td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                <td>
                    @if (item.Status == (int)RequestStatus.Open)
                    {
                        <span class="label label-success">Открыта</span>
                    }
                    else if (item.Status == (int)RequestStatus.Distributed)
                    {
                        <span class="label label-warning">Распределена</span>
                    }
                    else if (item.Status == (int)RequestStatus.Proccesing)
                    {
                        <span class="label label-important">На решении</span>
                    }
                    else if (item.Status == (int)RequestStatus.Closed)
                    {
                        <span class="label label-inverse">Закрыта</span>
                    }
                </td>
                <td>
                    @if (item.Priority == (int)RequestPriority.Low)
                    {
                        <span class="badge badge-low">Низкий</span>
                    }
                    else if (item.Priority == (int)RequestPriority.Medium)
                    {
                        <span class="badge badge-medium">Средний</span>
                    }
                    else if (item.Priority == (int)RequestPriority.High)
                    {
                        <span class="badge badge-high">Высокий</span>
                    }
                    else if (item.Priority == (int)RequestPriority.Critical)
                    {
                        <span class="badge badge-critical">Критичный</span>
                    }
                </td>
                <td>
                    @if (item.Document != null)
                    {
                        <a href="/Request/Download/@item.Id"><img src="../../Content/pictures/filey.png" alt='@item.Document.Url' class="tdImage" title="Скачать файл"/></a>
                    }
                    else
                    {
                        <img src="../../Content/pictures/filen.png" alt="без файла изображения" class="tdImage" title="Файл не приложен"/>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Deadline)
                </td>
                <td>
                        <a class="compItem" href='@Url.Action("Details", "Request", new {id = item.Id}, null)'>
                            <img src="../../Content/pictures/info.png" class="tdImage" title="Детали заявки"/>
                        </a>
                </td>
                <td>
                        <a class="compItem" href='@Url.Action("UserDetailsModal", "Account", new {id = item.AuthorId}, null)'>
                            <img src="../../Content/pictures/author.png" class="tdImage" title="Автор заявки"/>
                        </a>
                </td>
                <td>
                        @if (item.Executor != null)
                        {
                            <a class="compItem" href='@Url.Action("UserDetailsModal", "Account", new {id = item.ExecutorId}, null)'>
                                <img src="../../Content/pictures/executor.png" class="tdImage" title="Исполнитель заявки"/>
                            </a>
                        }
                        else
                        {
                            <h6>Исполнитель не установлен</h6>
                        }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    <a class="compItem" href='@Url.Action("Lifecycle", "Request", new {id = item.LifecycleId}, null)'>
                        <img src="../../Content/pictures/lifecycle.png" class="tdImage" title="Жизненный цикл заявки"/>
                    </a>
                </td>
                <td>
                    @if ((item.Solvers).Any())
                    {
                        using (Html.BeginForm("MySelfDistribute", "Request", "POST"))
                        {
                            @Html.Hidden("requestId", item.Id)
                            @Html.DropDownList("executorId", item.Solvers as SelectList)
                            <br>
                            <input type="submit" value="Назначить самому" class="buttonb" />
                        }
                    }
                    else
                    {
                        <h5>Список желающих пуст</h5>
                        <h6>Это значит, что за задачу примется администрация или же назначит их в скорейшем времени</h6>
                    }
                </td>
                <td>
                    @Html.ActionLink("Удалить", "Delete", new {id = item.Id})
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

@Styles.Render("~/Scripts/bootstrap-table-master/css")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/bootstrap-table-master/1")
    @Scripts.Render("~/bundles/bootstrap-table-master/2")
    @Scripts.Render("~/bundles/bootstrap-table-master/3")
    @Scripts.Render("~/bundles/bootstrap-table-master/4")
    @Scripts.Render("~/bundles/bootstrap-table-master/5")
    @Scripts.Render("~/bundles/bootstrap-table-master/6")
    @Scripts.Render("~/bundles/bootstrap-table-master/7")
    @Scripts.Render("~/bundles/bootstrap-table-master/8")
    @Scripts.Render("~/bundles/bootstrap-table-master/9")
    @Scripts.Render("~/bundles/bootstrap-table-master/10")
    @Scripts.Render("~/bundles/bootstrap-table-master/11")
    @Scripts.Render("~/bundles/bootstrap-table-master/12")
    @Scripts.Render("~/bundles/bootstrap-table-master/13")
    @Scripts.Render("~/bundles/bootstrap-table-master/14")
    @Scripts.Render("~/bundles/bootstrap-table-master/15")
    @Scripts.Render("~/bundles/bootstrap-table-master/16")
    @Scripts.Render("~/bundles/bootstrap-table-master/17")
    @Scripts.Render("~/bundles/bootstrap-table-master/18")
    @Scripts.Render("~/bundles/bootstrap-table-master/19")
        <script type="text/javascript">
                $(function () {
                    $.ajaxSetup({ cache: false });
                    $(".compItem").click(function (e) {

                        e.preventDefault();
                        $.get(this.href, function (data) {
                            $('#dialogContent').html(data);
                            $('#modDialog').modal('show');
                        });
                    });
                });
       </script>
}
